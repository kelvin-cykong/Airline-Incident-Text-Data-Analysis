{"trial_id": "0", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "text_block_1/block_type", "default": "vanilla", "conditions": [], "values": ["vanilla", "transformer", "ngram", "bert"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "text_block_1/max_tokens", "default": 5000, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [500, 5000, 20000], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/text_to_int_sequence_1/output_sequence_length", "default": 64, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/embedding_1/pretraining", "default": "none", "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": ["random", "glove", "fasttext", "word2vec", "none"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "text_block_1/embedding_1/embedding_dim", "default": 128, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/embedding_1/dropout", "default": 0.25, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/kernel_size", "default": 3, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [3, 5, 7], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "text_block_1/conv_block_1/separable", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}]}}, {"class_name": "Boolean", "config": {"name": "text_block_1/conv_block_1/max_pooling", "default": true, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}]}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/num_blocks", "default": 2, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/num_layers", "default": 2, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [1, 2], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/filters_0_0", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/filters_0_1", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/dropout", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/filters_1_0", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/conv_block_1/filters_1_1", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/spatial_reduction_1/reduction_type", "default": "flatten", "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": ["flatten", "global_max", "global_avg"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "text_block_1/dense_block_1/use_batchnorm", "default": false, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}]}}, {"class_name": "Choice", "config": {"name": "text_block_1/dense_block_1/num_layers", "default": 2, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/dense_block_1/units_0", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512, 1024], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/dense_block_1/dropout", "default": 0.0, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "text_block_1/dense_block_1/units_1", "default": 32, "conditions": [{"class_name": "Parent", "config": {"name": "text_block_1/block_type", "values": ["vanilla"]}}], "values": [16, 32, 64, 128, 256, 512, 1024], "ordered": true}}, {"class_name": "Choice", "config": {"name": "regression_head_1/dropout", "default": 0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}], "values": {"text_block_1/block_type": "vanilla", "text_block_1/max_tokens": 5000, "text_block_1/text_to_int_sequence_1/output_sequence_length": 512, "text_block_1/embedding_1/pretraining": "none", "text_block_1/embedding_1/embedding_dim": 128, "text_block_1/embedding_1/dropout": 0.25, "text_block_1/conv_block_1/kernel_size": 3, "text_block_1/conv_block_1/separable": false, "text_block_1/conv_block_1/max_pooling": true, "text_block_1/conv_block_1/num_blocks": 2, "text_block_1/conv_block_1/num_layers": 2, "text_block_1/conv_block_1/filters_0_0": 32, "text_block_1/conv_block_1/filters_0_1": 32, "text_block_1/conv_block_1/dropout": 0.0, "text_block_1/conv_block_1/filters_1_0": 32, "text_block_1/conv_block_1/filters_1_1": 32, "text_block_1/spatial_reduction_1/reduction_type": "flatten", "text_block_1/dense_block_1/use_batchnorm": false, "text_block_1/dense_block_1/num_layers": 2, "text_block_1/dense_block_1/units_0": 32, "text_block_1/dense_block_1/dropout": 0.0, "text_block_1/dense_block_1/units_1": 32, "regression_head_1/dropout": 0, "optimizer": "adam", "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/engine/tuner.py\", line 101, in _build_and_fit_model\n    _, history = utils.fit_with_adaptive_batch_size(\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/utils/utils.py\", line 88, in fit_with_adaptive_batch_size\n    history = run_with_adaptive_batch_size(\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/utils/utils.py\", line 101, in run_with_adaptive_batch_size\n    history = func(x=x, validation_data=validation_data, **fit_kwargs)\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/utils/utils.py\", line 89, in <lambda>\n    batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/tensorflow/python/eager/execute.py\", line 54, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.UnimplementedError: Graph execution error:\n\nDetected at node 'mean_squared_error/Cast' defined at (most recent call last):\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n      return _run_code(code, main_globals, None,\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/runpy.py\", line 86, in _run_code\n      exec(code, run_globals)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel_launcher.py\", line 17, in <module>\n      app.launch_new_instance()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/traitlets/config/application.py\", line 992, in launch_instance\n      app.start()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/kernelapp.py\", line 711, in start\n      self.io_loop.start()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/tornado/platform/asyncio.py\", line 199, in start\n      self.asyncio_loop.run_forever()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/asyncio/base_events.py\", line 603, in run_forever\n      self._run_once()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/asyncio/base_events.py\", line 1906, in _run_once\n      handle._run()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/asyncio/events.py\", line 80, in _run\n      self._context.run(self._callback, *self._args)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 510, in dispatch_queue\n      await self.process_one()\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 499, in process_one\n      await dispatch(*args)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 406, in dispatch_shell\n      await result\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/kernelbase.py\", line 729, in execute_request\n      reply_content = await reply_content\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/ipkernel.py\", line 411, in do_execute\n      res = shell.run_cell(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/ipykernel/zmqshell.py\", line 531, in run_cell\n      return super().run_cell(*args, **kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2961, in run_cell\n      result = self._run_cell(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3016, in _run_cell\n      result = runner(coro)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\n      coro.send(None)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3221, in run_cell_async\n      has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3400, in run_ast_nodes\n      if await self.run_code(code, result, async_=asy):\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3460, in run_code\n      exec(code_obj, self.user_global_ns, self.user_ns)\n    File \"/var/folders/g9/83_1l1jd727ds6_vc0207lk40000gn/T/ipykernel_2175/4216086885.py\", line 3, in <module>\n      keras.fit(X_train_ak, y_train_ak, epochs=30, validation_split=0.2)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/tasks/text.py\", line 292, in fit\n      history = super().fit(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/auto_model.py\", line 292, in fit\n      history = self.tuner.search(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/engine/tuner.py\", line 193, in search\n      super().search(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/base_tuner.py\", line 230, in search\n      self._try_run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/base_tuner.py\", line 270, in _try_run_and_update_trial\n      self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/base_tuner.py\", line 235, in _run_and_update_trial\n      results = self.run_trial(trial, *fit_args, **fit_kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras_tuner/engine/tuner.py\", line 287, in run_trial\n      obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/engine/tuner.py\", line 101, in _build_and_fit_model\n      _, history = utils.fit_with_adaptive_batch_size(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/utils/utils.py\", line 88, in fit_with_adaptive_batch_size\n      history = run_with_adaptive_batch_size(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/utils/utils.py\", line 101, in run_with_adaptive_batch_size\n      history = func(x=x, validation_data=validation_data, **fit_kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/autokeras/utils/utils.py\", line 89, in <lambda>\n      batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/utils/traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/training.py\", line 1564, in fit\n      tmp_logs = self.train_function(iterator)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/training.py\", line 1160, in train_function\n      return step_function(self, iterator)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/training.py\", line 1146, in step_function\n      outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/training.py\", line 1135, in run_step\n      outputs = model.train_step(data)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/training.py\", line 994, in train_step\n      loss = self.compute_loss(x, y, y_pred, sample_weight)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/training.py\", line 1052, in compute_loss\n      return self.compiled_loss(\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/engine/compile_utils.py\", line 265, in __call__\n      loss_value = loss_obj(y_t, y_p, sample_weight=sw)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/losses.py\", line 152, in __call__\n      losses = call_fn(y_true, y_pred)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/losses.py\", line 272, in call\n      return ag_fn(y_true, y_pred, **self._fn_kwargs)\n    File \"/Users/kelvincykong/anaconda3/lib/python3.10/site-packages/keras/losses.py\", line 1485, in mean_squared_error\n      y_true = tf.cast(y_true, y_pred.dtype)\nNode: 'mean_squared_error/Cast'\nCast string to float is not supported\n\t [[{{node mean_squared_error/Cast}}]] [Op:__inference_train_function_10676]\n"}